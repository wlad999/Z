{"version":3,"sources":["components/Header/Header.module.css","components/Footer/Footer.module.css","pages/About/About.module.css","pages/Contact/Contact.module.css","pages/Posts/Posts.module.css","logo.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","pages/Posts/Posts.jsx","api/api.js","redux/reducers/postsReducer.js","pages/Posts/PostsContainer.jsx","api/request.js","pages/Contact/Contact.jsx","pages/About/About.jsx","pages/Posts/SelectPost.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","Header","className","styles","wrapper","to","logo","src","alt","nav","link","Footer","Posts","props","pagesCount","useState","currentPage","setCurrentPage","currentPageAC","posts","length","Math","ceil","pages","i","push","currentArrPosts","filter","post","id","box","map","p","key","selectedPage","page","onClick","e","Post","setSelectedPostAC","text","title","baseUrl","url","initialState","selectedPost","coments","potsReducer","state","action","type","PostsContainer","this","getPostsThunk","header","main","footer","React","Component","connect","postsPage","dispatch","Axios","api","then","resp","status","Error","catch","error","console","log","response","data","Contact","href","target","About","about","scroll","SelectPost","getComentsThunk","delPostAC","delComentsAC","userId","body","list","com","name","mainEmpty","getComentsRequest","App","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a37a0bf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__Y170U\",\"logo\":\"Header_logo__RZyBg\",\"nav\":\"Header_nav__2vr88\",\"link\":\"Header_link__1AA1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Footer_wrapper__3VYun\",\"nav\":\"Footer_nav__HiA0W\",\"link\":\"Footer_link__2w9I6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"About_wrapper__2k60d\",\"main\":\"About_main__2iu2r\",\"footer\":\"About_footer__SL7-Q\",\"header\":\"About_header__2DAcR\",\"scroll\":\"About_scroll__37lnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contact_wrapper__2wm5L\",\"main\":\"Contact_main__3of7F\",\"footer\":\"Contact_footer__2VJvg\",\"header\":\"Contact_header__830kh\",\"nav\":\"Contact_nav__2Ah7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Posts_selectedPage__1w1ev\",\"page\":\"Posts_page__3sLBa\",\"box\":\"Posts_box__XIktH\",\"com\":\"Posts_com__1j0oU\",\"wrapper\":\"Posts_wrapper__195Dp\",\"main\":\"Posts_main__ykQ9p\",\"mainEmpty\":\"Posts_mainEmpty__2UwOM\",\"list\":\"Posts_list__3uURJ\",\"nav\":\"Posts_nav__3vqay\",\"text\":\"Posts_text__dk5rc\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"../../logo.svg\";\r\nconst Header = () => (\r\n  <div className={styles.wrapper}>\r\n    <NavLink to={\"/\"}>\r\n      <img className={styles.logo} src={logo} alt=\"Logo\" />\r\n    </NavLink>\r\n    <span className={styles.nav}>\r\n      <NavLink className={styles.link} to={\"/\"}>\r\n        Posts\r\n      </NavLink>\r\n      <NavLink className={styles.link} to={\"/about\"}>\r\n        About\r\n      </NavLink>\r\n      <NavLink className={styles.link} to={\"/contact\"}>\r\n        Contact\r\n      </NavLink>\r\n    </span>\r\n  </div>\r\n);\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Footer = () => (\r\n  <div className={styles.wrapper}>\r\n    <span className={styles.nav}>\r\n      <NavLink className={styles.link} to={\"/\"}>\r\n        Posts\r\n      </NavLink>\r\n      <NavLink className={styles.link} to={\"/about\"}>\r\n        About\r\n      </NavLink>\r\n      <NavLink className={styles.link} to={\"/contact\"}>\r\n        Contact\r\n      </NavLink>\r\n    </span>\r\n  </div>\r\n);\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styles from \"./Posts.module.css\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Posts = props => {\r\n  let [currentPage, setCurrentPage] = useState(props.currentPage);\r\n\r\n  props.currentPageAC(currentPage);\r\n  let pagesCount;\r\n  let pageSize = 10;\r\n  if (props.posts && props.posts.length > 0) {\r\n    pagesCount = Math.ceil(props.posts.length / pageSize);\r\n  }\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let currentArrPosts = props.posts.filter(\r\n    post => post.id > currentPage * 10 - 10 && post.id <= currentPage * 10\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.box}>\r\n        {pages.map(p => {\r\n          return (\r\n            <span\r\n              key={p}\r\n              className={currentPage === p ? styles.selectedPage : styles.page}\r\n              onClick={e => {\r\n                setCurrentPage(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n        {currentArrPosts.map(Post => {\r\n          return (\r\n            <div className={styles.page} key={Post.id}>\r\n              <NavLink\r\n                className={styles.nav}\r\n                to={\"/selectpost\"}\r\n                onClick={() => props.setSelectedPostAC(Post)}\r\n              >\r\n                <div className={styles.text}>POST ID {Post.id}</div>\r\n                <div className={styles.text}>TITLE {Post.title}</div>\r\n              </NavLink>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Posts;\r\n","const baseUrl = \"https://jsonplaceholder.typicode.com/\";\r\n\r\nexport const url = {\r\n  posts: () => `${baseUrl}posts/`,\r\n  selectedComents: id => `${baseUrl}comments?postId=${id}`\r\n};\r\n","import { getPostsRequest, getComentsRequest } from \"../../api/request\";\r\nlet GET_POSTS = \"GET_POSTS\";\r\nlet SET_POST = \"SET_POST\";\r\nlet SET_CARRENT_PAGE = \"SET_CARRENT_PAGE\";\r\nlet SET_COMENTS = \"SET_COMENTS\";\r\n\r\nlet initialState = {\r\n  posts: [],\r\n  currentPage: 1,\r\n  selectedPost: {},\r\n  coments: []\r\n};\r\n\r\nconst potsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.posts\r\n      };\r\n    case SET_POST:\r\n      return {\r\n        ...state,\r\n        selectedPost: action.post\r\n      };\r\n    case SET_CARRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      };\r\n    case SET_COMENTS:\r\n      return {\r\n        ...state,\r\n        coments: action.coments\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getPostsAC = posts => ({\r\n  type: GET_POSTS,\r\n  posts\r\n});\r\nexport const setSelectedPostAC = post => ({\r\n  type: SET_POST,\r\n  post\r\n});\r\nexport const delPostAC = () => ({\r\n  type: SET_POST,\r\n  post: {}\r\n});\r\nexport const setComentsAC = coments => ({\r\n  type: SET_COMENTS,\r\n  coments\r\n});\r\nexport const delComentsAC = () => ({\r\n  type: SET_COMENTS,\r\n  coments: []\r\n});\r\nexport const currentPageAC = currentPage => ({\r\n  type: SET_CARRENT_PAGE,\r\n  currentPage\r\n});\r\nexport const getPostsThunk = () => {\r\n  return dispatch => {\r\n    getPostsRequest().then(response => {\r\n      dispatch(getPostsAC(response.data));\r\n    });\r\n  };\r\n};\r\nexport const getComentsThunk = id => {\r\n  return dispatch => {\r\n    getComentsRequest(id).then(response => {\r\n      dispatch(setComentsAC(response.data));\r\n    });\r\n  };\r\n};\r\n\r\nexport default potsReducer;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Posts.module.css\";\r\nimport Posts from \"./Posts\";\r\nimport {\r\n  getPostsThunk,\r\n  setSelectedPostAC,\r\n  currentPageAC\r\n} from \"../../redux/reducers/postsReducer\";\r\n\r\nclass PostsContainer extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.getPostsThunk();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <Header className={styles.header} />\r\n        <div className={styles.main}>\r\n          <Posts\r\n            posts={this.props.posts}\r\n            currentPage={this.props.currentPage}\r\n            setSelectedPostAC={this.props.setSelectedPostAC}\r\n            currentPageAC={this.props.currentPageAC}\r\n          />\r\n        </div>\r\n        <Footer className={styles.footer} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlet MSTP = state => ({\r\n  posts: state.postsPage.posts,\r\n  currentPage: state.postsPage.currentPage\r\n});\r\n\r\nexport default connect(\r\n  MSTP,\r\n  { getPostsThunk, setSelectedPostAC, currentPageAC }\r\n)(PostsContainer);\r\n","import * as Axios from \"axios\";\r\nimport * as api from \"./api\";\r\n\r\nexport const getPostsRequest = () => {\r\n  return Axios.get(api.url.posts())\r\n    .then(resp => {\r\n      // console.log(resp);\r\n      if (resp.status !== 200) {\r\n        throw new Error(\"ERROR\");\r\n      }\r\n      return resp;\r\n    })\r\n    .catch(error => console.log(error));\r\n};\r\nexport const getComentsRequest = id => {\r\n  return Axios.get(api.url.selectedComents(id))\r\n    .then(resp => {\r\n      // console.log(resp);\r\n      if (resp.status !== 200) {\r\n        throw new Error(\"ERROR\");\r\n      }\r\n      return resp;\r\n    })\r\n    .catch(error => console.log(error));\r\n};\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport styles from \"./Contact.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Contact = () => (\r\n  <div className={styles.wrapper}>\r\n    <Header />\r\n    <main className={styles.main}>\r\n      <h2>CONTACT</h2>\r\n      <p>Vorobkevich St., 33, Chernivtsi, Chernivtsi region 58000, UA</p>\r\n      <div>\r\n        <a href=\"http://zazend.com\" target=\"_blank\">\r\n          http://zazend.com\r\n        </a>\r\n      </div>\r\n      <NavLink className={styles.nav} to={\"/\"}>\r\n        <h3>Don`t thinking - go to Chernivtsi right now!</h3>\r\n      </NavLink>\r\n    </main>\r\n    <div className={styles.header}>\r\n      <Footer />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport styles from \"./About.module.css\";\r\n\r\nconst About = () => (\r\n  <div className={styles.wrapper}>\r\n    <Header />\r\n    <div className={styles.main}>\r\n      <div className={styles.about}>\r\n        <h2>About</h2>\r\n      </div>\r\n      <div className={styles.scroll}>\r\n        <p>\r\n          Zazend is an international outsourcing and outstaffing company. The\r\n          main directions in which our company specializes are web development\r\n          and development of mobile applications, as well as E-comerce. Together\r\n          we are moving towards a goal and are a real family in which synergy\r\n          reigns. Focus on long-term partnership and friendship with customers\r\n          and employees. The Zazend family is a team of friendly, dedicated\r\n          professionals who love to develop interesting projects. The growth of\r\n          a person in professional and personal terms is what really inspires!\r\n        </p>\r\n        <p>We say “yes” of innovation and a new look at management!</p>\r\n        <p>\r\n          A democratic and flexible environment is a positive factor that makes\r\n          it easy and pleasant to work in Zazend, while receiving only positive\r\n          emotions.\r\n        </p>\r\n      </div>\r\n      <h3>WELCOM ON BOARD!</h3>\r\n    </div>\r\n    <Footer className={styles.footer} />\r\n  </div>\r\n);\r\nexport default About;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport styles from \"./Posts.module.css\";\r\nimport {\r\n  getComentsThunk,\r\n  delPostAC,\r\n  delComentsAC\r\n} from \"../../redux/reducers/postsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass SelectPost extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.getComentsThunk(this.props.selectedPost.id);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.delPostAC();\r\n    this.props.delComentsAC();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <Header />\r\n        {this.props.selectedPost.title ? (\r\n          <div className={styles.main}>\r\n            <p>TITLE: {this.props.selectedPost.title}</p>\r\n            <p>USER ID: {this.props.selectedPost.userId}</p>\r\n            <p>POST: {this.props.selectedPost.body}</p>\r\n            <p>COMENTS:</p>\r\n            <div className={styles.list}>\r\n              {this.props.coments.map(com => (\r\n                <div key={com.id}>\r\n                  <div>NAME: {com.name}</div>\r\n                  <div className={styles.com}>{com.body}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <NavLink className={styles.mainEmpty} to={\"/\"}>\r\n            What are you waiting for??? - click on something !!!\r\n          </NavLink>\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MSTP = state => ({\r\n  selectedPost: state.postsPage.selectedPost,\r\n  coments: state.postsPage.coments\r\n});\r\n\r\nexport default connect(\r\n  MSTP,\r\n  { getComentsThunk, delPostAC, delComentsAC }\r\n)(SelectPost);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport PostsContainer from \"./pages/Posts/PostsContainer\";\nimport Contact from \"./pages/Contact/Contact\";\nimport About from \"./pages/About/About\";\nimport { Route } from \"react-router-dom\";\nimport SelectPost from \"./pages/Posts/SelectPost.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Route exact path=\"/\" render={props => <PostsContainer {...props} />} />\n      <Route path=\"/contact\" render={props => <Contact {...props} />} />\n      <Route path=\"/about\" render={props => <About {...props} />} />\n      <Route path=\"/selectpost\" render={props => <SelectPost {...props} />} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport potsReducer from \"./reducers/postsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  postsPage: potsReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter basename=\"/\">\r\n      <Route component={App} />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}